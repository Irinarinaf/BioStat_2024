library('stringi')
library('flextable')
library('ggplot2')
library(forcats)
theme_custom = theme(axis.title = element_text(size = 25),  axis.text = element_text(size = 20), legend.title = element_text(size = 25),  legend.text = element_text(size = 20), plot.title = element_text(hjust = 0.5, size = 25) ,plot.subtitle = element_text(hjust = 0.5, size = 20) )
## Data reading
hogwarts <- read_csv("dayavis_BI_2024/data/hogwarts_2024.csv")
hogwarts |> head()
#upload data
df <- read_csv("carrental.csv")
df |> head()
library('readr')
library(tidyverse)
#upload data
df <- read_csv("carrental.csv")
df |> head()
#Распространеннность experience
df%>%
distinct(id, .keep_all = TRUE) %>%  # Убираем дубликаты по id, тк нигде не указано, что в датасете одна аренда на водителя, и предполагаем, что id это идентификатор водителя, а не запись аренды автомобиля
summarise(prevalence = sum(experience == 1) / n() * 100) #считаем распросраненность на индивидуальных водителей
print()
library('readr')
library(tidyverse)
#Распространеннность experience
df%>%
distinct(id, .keep_all = TRUE) %>%  # Убираем дубликаты по id, тк нигде не указано, что в датасете одна аренда на водителя, и предполагаем, что id это идентификатор водителя, а не запись аренды автомобиля
summarise(prevalence = sum(experience == 1) / n() * 100) #считаем распросраненность на индивидуальных водителей
#результаты означают, что в момент наблюдения у 32% водителей бравших автомобили в аренду был опыт вождения
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 3. Риск ДТП среди клиентов без опыта вождения
risk_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
print
library('readr')
library(tidyverse)
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 3. Риск ДТП среди клиентов без опыта вождения
risk_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
library('readr')
library(tidyverse)
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 2. Риск ДТП среди клиентов с опытом вождения
df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 3. Риск ДТП среди клиентов без опыта вождения
df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
library('readr')
library(tidyverse)
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
library('readr')
library(tidyverse)
# 2. Риск ДТП среди клиентов с опытом вождения
df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
library('readr')
library(tidyverse)
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 3. Риск ДТП среди клиентов без опыта вождения
risk_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# Вывод результатов
print("Риск ДТП в общей группе:")
print(risk_overall)
print("Риск ДТП среди клиентов с опытом вождения:")
print(risk_experience)
print("Риск ДТП среди клиентов без опыта вождения:")
print(risk_no_experience)
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 3. Риск ДТП среди клиентов без опыта вождения
risk_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# Вывод результатов
print("Риск ДТП в общей группе:")
print(risk_overall)
print("Риск ДТП среди клиентов с опытом вождения:")
print(risk_experience)
print("Риск ДТП среди клиентов без опыта вождения:")
print(risk_no_experience)
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 3. Риск ДТП среди клиентов без опыта вождения
risk_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# Вывод результатов
print("Риск ДТП в общей группе:")
print(risk_overall)
print("Риск ДТП среди клиентов с опытом вождения:")
print(risk_experience)
print("Риск ДТП среди клиентов без опыта вождения:")
print(risk_no_experience)
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 3. Риск ДТП среди клиентов без опыта вождения
risk_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# Вывод результатов
print("Риск ДТП в общей группе:")
print(risk_overall)
print("Риск ДТП среди клиентов с опытом вождения:")
print(risk_experience)
print("Риск ДТП среди клиентов без опыта вождения:")
print(risk_no_experience)
library('readr')
library(tidyverse)
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 3. Риск ДТП среди клиентов без опыта вождения
risk_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# Вывод результатов
risk_overall
risk_experience
risk_no_experience
library('readr')
library(tidyverse)
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 3. Риск ДТП среди клиентов без опыта вождения
risk_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# Вывод результатов
risk_overall
risk_experience
risk_no_experience
library('readr')
library(tidyverse)
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 3. Риск ДТП среди клиентов без опыта вождения
risk_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# Вывод результатов
risk_overall
library('readr')
library(tidyverse)
#upload data
df <- read_csv("carrental.csv")
df |> head()
#Распространеннность experience
df%>%
distinct(id, .keep_all = TRUE) %>%  # Убираем дубликаты по id, тк нигде не указано, что в датасете одна аренда на водителя, и предполагаем, что id это идентификатор водителя, а не запись аренды автомобиля
summarise(prevalence = sum(experience == 1) / n() * 100) #считаем распросраненность на индивидуальных водителей
#результаты означают, что в момент наблюдения у 32% водителей бравших автомобили в аренду был опыт вождения
library('readr')
library(tidyverse)
library('readr')
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
#upload data
df <- read_csv("carrental.csv")
df |> head()
{r}
#Распространеннность experience
df%>%
distinct(id, .keep_all = TRUE) %>%  # Убираем дубликаты по id, тк нигде не указано, что в датасете одна аренда на водителя, и предполагаем, что id это идентификатор водителя, а не запись аренды автомобиля
summarise(prevalence = sum(experience == 1) / n() * 100) #считаем распросраненность на индивидуальных водителей
#результаты означают, что в момент наблюдения у 32% водителей бравших автомобили в аренду был опыт вождения
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
risk_overall
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
risk_experience
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
head(risk_experience)
knitr::opts_chunk$set(echo = TRUE)
options(digits = 22)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
risk_overall
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
risk_experience
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
print(risk_experience)
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
print(risk_experience$risk)
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
print(risk_overall$risk)
#Распространеннность experience
df%>%
summarise(prevalence = sum(experience == 1) / n() * 100)
#результаты означают, что в момент наблюдения у 32% водителей бравших автомобили в аренду был опыт вождения
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
print(risk_overall$risk)
#результаты означают, что риск ДТП среди всех водителей равен 22%
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE)
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
print(risk_overall$risk)
#результаты означают, что риск ДТП среди всех водителей равен 22%
# 3. Риск ДТП среди клиентов без опыта вождения
risk_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
print(risk_no_experienc$risk)
# 3. Риск ДТП среди клиентов без опыта вождения
risk_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
print(risk_no_experience$risk)
#результаты означают, что риск ДТП среди опытынх водителей равен 9.38%
# 1. Плотность событий в общей группе
incidence_rate_overall <- df_unique %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
# 1. Плотность событий в общей группе
incidence_rate_overall <- df_unique %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE) %>%
mutate(rental_duration = as.numeric(stop - start))  # Вычисляем продолжительность аренды
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
print(risk_overall$risk)
#результаты означают, что риск ДТП среди всех водителей равен 22%
#upload data
df <- read_csv("carrental.csv")
df |> head()
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE) %>%
mutate(rental_duration = as.numeric(stop - start))  # Вычисляем продолжительность аренды
#Распространеннность experience
df_unique%>%
summarise(prevalence = sum(experience == 1) / n() * 100)
#результаты означают, что в момент наблюдения у 32% водителей бравших автомобили в аренду был опыт вождения
#Риск “accident” в общей группе, в группе “experience” и в группе без “experience”
# 1. Риск ДТП в общей группе
risk_overall <- df_unique %>%
summarise(risk = sum(accident == 1) / n() * 100)
print(risk_overall$risk)
#результаты означают, что риск ДТП среди всех водителей равен 22%
# 2. Риск ДТП среди клиентов с опытом вождения
risk_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(risk = sum(accident == 1) / n() * 100)
print(risk_experience$risk)
#результаты означают, что риск ДТП среди опытных водителей равен 9.38%
# 3. Риск ДТП среди клиентов без опыта вождения
risk_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(risk = sum(accident == 1) / n() * 100)
print(risk_no_experience$risk)
#результаты означают, что риск ДТП среди опытынх водителей равен 27.94,что почти в 3 раза выше риска для опытных водителей%
# 1. Плотность событий в общей группе
incidence_rate_overall <- df_unique %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
# 2. Плотность событий среди клиентов с опытом вождения
incidence_rate_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
# 3. Плотность событий среди клиентов без опыта вождения
incidence_rate_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
print(incidence_rate_overall$incidence_rate, incidence_rate_experience$incidence_rate, incidence_rate_no_experience$incidence_rate)
# 1. Плотность событий в общей группе
incidence_rate_overall <- df_unique %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
# 2. Плотность событий среди клиентов с опытом вождения
incidence_rate_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
# 3. Плотность событий среди клиентов без опыта вождения
incidence_rate_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
#print(incidence_rate_overall$incidence_rate, incidence_rate_experience$incidence_rate, incidence_rate_no_experience$incidence_rate)
# 1. Плотность событий в общей группе
incidence_rate_overall <- df_unique %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
# 2. Плотность событий среди клиентов с опытом вождения
incidence_rate_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
# 3. Плотность событий среди клиентов без опыта вождения
incidence_rate_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
print(incidence_rate_overall$incidence_rate)
print(incidence_rate_experience$incidence_rate)
print(incidence_rate_no_experience$incidence_rate)
# 1. Плотность событий в общей группе
incidence_rate_overall <- df_unique %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration)*365.25)
# 2. Плотность событий среди клиентов с опытом вождения
incidence_rate_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
# 3. Плотность событий среди клиентов без опыта вождения
incidence_rate_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration))
print(incidence_rate_overall$incidence_rate)
print(incidence_rate_experience$incidence_rate)
print(incidence_rate_no_experience$incidence_rate)
# 1. Плотность событий в общей группе
incidence_rate_overall <- df_unique %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration)*365.25)
# 2. Плотность событий среди клиентов с опытом вождения
incidence_rate_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration)*365.25)
# 3. Плотность событий среди клиентов без опыта вождения
incidence_rate_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration)*365.25)
print(incidence_rate_overall$incidence_rate)
print(incidence_rate_experience$incidence_rate)
print(incidence_rate_no_experience$incidence_rate)
View(df_unique)
#upload data
df <- read_csv("carrental.csv")
df |> head()
# Убираем дубликаты по id, чтобы считать по уникальным клиентам
df_unique <- df %>%
distinct(id, .keep_all = TRUE) %>%
mutate(rental_duration = as.numeric(stop - start + 1))  # Вычисляем продолжительность аренды
# 1. Плотность событий в общей группе
incidence_rate_overall <- df_unique %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration)*365.25)
# 2. Плотность событий среди клиентов с опытом вождения
incidence_rate_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration)*365.25)
# 3. Плотность событий среди клиентов без опыта вождения
incidence_rate_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration)*365.25)
print(incidence_rate_overall$incidence_rate)
print(incidence_rate_experience$incidence_rate)
print(incidence_rate_no_experience$incidence_rate)
# 1. Плотность событий в общей группе
incidence_rate_overall <- df_unique %>%
summarise(incidence_rate =  sum(rental_duration)*365.25)
# 2. Плотность событий среди клиентов с опытом вождения
incidence_rate_experience <- df_unique %>%
filter(experience == 1) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration)*365.25)
# 3. Плотность событий среди клиентов без опыта вождения
incidence_rate_no_experience <- df_unique %>%
filter(experience == 0) %>%
summarise(incidence_rate = sum(accident) / sum(rental_duration)*365.25)
print(incidence_rate_overall$incidence_rate)
print(incidence_rate_experience$incidence_rate)
print(incidence_rate_no_experience$incidence_rate)
#результаты по плотности событий в год показыают, что плотность событий практически не различается для опытнах и неопытных водителей (1.12 аварий/год для опытных и 1.09 аварий/год для неопытных) и плотность аварий у опытных водителей даже выше, чем не у опытных
